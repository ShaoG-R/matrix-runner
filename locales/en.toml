# Common
success = "SUCCESS"
failure = "FAILURE"
cancelled = "Cancelled"
unhandled_error = "Unhandled Error"
build_failure = "Build Failure"
test_failure = "Test Failure"

# main.rs
shutdown_signal = "Ctrl+C received, initiating graceful shutdown..."
temp_dir_cleanup_info = "Temporary directories will be auto-cleaned for successful tests."
failure_artifact_info = "Artifacts for failed tests will be preserved in './target-errors'."
dep_fetch_start = "Fetching all dependencies to avoid lock contention..."
dep_fetch_success = "Dependency fetching successful."
project_root_detected = "Project root detected at: {}"
testing_crate = "Testing crate: {}"
loading_test_matrix = "Loading test matrix from: {}"
current_arch = "Current architecture detected: {}"
filtered_arch_cases = "Filtered out {} test case(s) based on current architecture. {} case(s) remaining."
running_as_split_runner = "Running as runner {}/{} ({} cases assigned)"
running_as_single_runner = "Running all test cases as a single runner."
no_cases_to_run = "No test cases to run for this runner, exiting successfully."
current_os = "Current OS detected: {}"
running_safe_cases = "Running {} safe configurations with up to {} parallel jobs..."
running_flaky_cases = "Running {} flaky configurations sequentially..."
all_tests_completed = "All tests completed. Generating report..."
test_skipped_due_to_cancellation = "Test skipped due to cancellation."
temp_dir_cleanup_end_success = "Temporary build directories for successful tests have been cleaned up automatically."

# Panics in main.rs (it's good practice to have them, even if panics aren't usually translated)
project_dir_not_found = "Project directory not found at '{}'"
cargo_fetch_failed = "'cargo fetch' failed. Please check your network and Cargo.toml file."
manifest_read_failed = "Failed to read manifest file at '{}'"
manifest_parse_failed = "Failed to parse Cargo.toml manifest"
config_read_failed = "Failed to read config file at '{}'"
config_read_failed_path = "Failed to find or read config file at '{}': {}"
config_parse_failed = "Failed to parse TestMatrix.toml config"
runner_index_invalid = "--runner-index must be less than --total-runners."
runner_flags_inconsistent = "--total-runners and --runner-index must be provided together."

# reporting.rs
unexpected_failure_banner = "UNEXPECTED FAILURE DETECTED"
failure_details_for = "  Failure details for: {}"
stopping_other_tests = "Signaling all other running tests to stop. A final summary will be printed at the end."
final_summary_banner = "==================== FINAL SUMMARY ===================="
summary_successful_tests = "--- Successful Tests ---"
summary_allowed_failures = "--- Allowed Failures ---"
summary_failed_as_expected = "{} (failed as expected on {})"
summary_cancelled_tests = "--- Cancelled Tests ---"
summary_cancelled_test_case = "{} (Cancelled)"
summary_unexpected_failures = "--- Unexpected Failures ---"
summary_unexpected_failure_case = "{} ({} Failure)"
overall_failure = "TEST MATRIX FAILED"
overall_cancelled = "TEST MATRIX EXECUTION CANCELLED"
overall_success = "TEST MATRIX PASSED SUCCESSFULLY"

# command.rs
compiler_error_parse_failed = "Could not parse specific compiler errors. Raw output snippet:"
kill_process_failed = "Failed to kill child process: {}"
capture_stdout_failed = "Failed to capture stdout of child process"
capture_stderr_failed = "Failed to capture stderr of child process"

# execution.rs
building_test = "Building test: {}"
build_successful = "Successfully built test: {}"
build_failed_preserving = "Build for '{}' failed. Preserving build artifacts in: {}"
cleanup_old_artifacts_failed = "Failed to clean up old error artifacts directory"
copy_artifacts_failed = "Failed to copy error artifacts for '{}': {}"
find_executable_failed = "Could not find test executable in cargo output"
queueing_test = "Queueing test: {}"
running_test = "Running test: {}"
finished_test = "Finished test: {} in {}"
test_failed_preserving = "Test '{}' failed. Preserving build artifacts in: {}"
error_waiting_process_complete = "Error waiting for process to complete"

# utils.rs
create_temp_dir_failed = "Failed to create temporary directory" 