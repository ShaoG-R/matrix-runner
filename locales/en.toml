# Common
build_failure = "Build Failure"
test_failure = "Test Failure"

# main.rs
shutdown_signal = "Ctrl+C received, initiating graceful shutdown..."
temp_dir_cleanup_info = "Temporary directories will be auto-cleaned for successful tests."
failure_artifact_info = "Artifacts for failed tests will be preserved in './target-errors'."
dep_fetch_start = "Fetching all dependencies to avoid lock contention..."
dep_fetch_success = "Dependency fetching successful."
project_root_detected = "Project root detected at: {}"
testing_crate = "Testing crate: {}"
loading_test_matrix = "Loading test matrix from: {}"
current_arch = "Current architecture detected: {}"
filtered_arch_cases = "Filtered out {} test case(s) based on current architecture. {} case(s) remaining."
running_as_split_runner = "Running as runner {}/{} ({} cases assigned)"
running_as_single_runner = "Running all test cases as a single runner."
no_cases_to_run = "No test cases to run for this runner, exiting successfully."
current_os = "Current OS detected: {}"
flaky_cases_found = "{} flaky case(s) found. These are allowed to fail on the current OS."
running_safe_cases = "\nRunning {} safe configurations with up to {} parallel jobs..."
running_flaky_cases = "\nRunning {} flaky configurations with up to {} parallel jobs..."
fast_fail_triggered = "A safe test failed. Triggering fast-fail and cancelling other safe tests..."
all_tests_passed = "All tests passed successfully!"

# Panics in main.rs (it's good practice to have them, even if panics aren't usually translated)
project_dir_not_found = "Project directory not found at '{}'"
cargo_fetch_failed = "'cargo fetch' failed. Please check your network and Cargo.toml file."
manifest_read_failed = "Failed to read manifest file at '{}'"
manifest_parse_failed = "Failed to parse Cargo.toml manifest"
config_read_failed_path = "Failed to find or read config file at '{}': {}"
config_parse_failed = "Failed to parse TestMatrix.toml config"
runner_index_invalid = "--runner-index must be less than --total-runners."
runner_flags_inconsistent = "--total-runners and --runner-index must be provided together."

# reporting.rs
unexpected_failure_banner = "UNEXPECTED FAILURE DETECTED"
failure_details_for = "  Failure details for: {}"
final_summary_banner = "==================== FINAL SUMMARY ===================="
summary_successful_tests = "--- Successful Tests ---"
summary_allowed_failures = "--- Allowed Failures ---"
summary_failed_as_expected = "{} (failed as expected on {})"
summary_skipped_tests = "--- Skipped Tests ---"
summary_skipped_count = "{} test(s) were skipped."
summary_unexpected_failures = "--- Unexpected Failures ---"
overall_failure = "TEST MATRIX FAILED"
overall_success = "TEST MATRIX PASSED SUCCESSFULLY"

# command.rs
compiler_error_parse_failed = "Could not parse specific compiler errors. Raw output snippet:"
capture_stdout_failed = "Failed to capture stdout of child process"
capture_stderr_failed = "Failed to capture stderr of child process"

# execution.rs
building_test = "Building test: {}"
build_successful = "Successfully built test: {}"
build_failed_preserving = "Build for '{}' failed. Preserving build artifacts in: {}"
cleanup_old_artifacts_failed = "Failed to clean up old error artifacts directory"
copy_artifacts_failed = "Failed to copy error artifacts for '{}': {}"
find_executable_failed = "Could not find test executable in cargo output"
preserving_artifacts = "Preserving build artifacts in: {}"
running_test = "Running test: {}"
test_passed = "Test '{}' passed in {}"
test_failed = "Test '{}' failed in {}"

# utils.rs
create_temp_dir_failed = "Failed to create temporary directory"

# init.rs
init_wizard_welcome = "Welcome to the matrix-runner setup wizard!"
init_wizard_description = "This will help you create a `TestMatrix.toml` file to configure your tests."
init_aborted = "Aborted."
init_detected_crate_name = "Detected crate name: {}"
init_overwrite_prompt = "`{}` already exists. Do you want to overwrite it?"
init_case_selection_prompt = "Choose which test cases to generate (use space to select, enter to confirm)"
init_no_cases_selected = "No test cases selected. Your config file will be minimal."
init_no_std_features_prompt = "Enter comma-separated features for the `no_std` case (if any)"
init_all_features_prompt = "Enter comma-separated list of ALL your crate's features"
init_custom_command_prompt = "Enter the custom command to run"
init_success_created = "Successfully created `{}`."
init_usage_hint = "You can now run `matrix-runner` to execute your test matrix."
init_serialize_failed = "Failed to serialize configuration to TOML."
init_write_failed = "Failed to write to {}"
init_cargo_toml_not_found = "Could not find or read Cargo.toml."
init_cargo_toml_parse_failed = "Failed to parse Cargo.toml."
init_user_confirmation_failed = "Failed to get user confirmation."

# HTML report generation
html_report_title = "Test Matrix Report"
html_report_generated_on = "Generated on: {}"
html_report_passed = "Passed"
html_report_failed = "Failed"
html_report_allowed_failures = "Allowed Failures"
html_report_skipped = "Skipped"
html_report_total = "Total"
html_report_name_column = "Name"
html_report_status_column = "Status"
html_report_output_column = "Output"
html_report_show_hide = "Show/Hide"

# Test case templates for init wizard
init_template_default_features = "Default features on stable Rust"
init_template_no_default_features = "No default features (`no_std` setup)"
init_template_all_features = "All features enabled"
init_template_custom_command = "A custom command (e.g., for MIRI or wasm-pack)"