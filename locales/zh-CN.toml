# 通用
success = "成功"
failure = "失败"
cancelled = "已取消"
unhandled_error = "未处理错误"
build_failure = "构建失败"
test_failure = "测试失败"

# main.rs
shutdown_signal = "接收到 Ctrl+C，正在启动平稳关闭..."
temp_dir_cleanup_info = "成功的测试将自动清理临时目录。"
failure_artifact_info = "失败测试的产物将保留在 './target-errors' 目录中。"
dep_fetch_start = "正在预取所有依赖项以避免锁竞争..."
dep_fetch_success = "依赖预取成功。"
project_root_detected = "检测到项目根目录于: {}"
testing_crate = "正在测试的 Crate: {}"
loading_test_matrix = "正在从 {} 加载测试矩阵"
current_arch = "检测到当前CPU架构: {}"
filtered_arch_cases = "根据当前CPU架构，已过滤掉 {} 个测试用例。剩余 {} 个用例。"
running_as_split_runner = "作为执行器 {}/{} 运行 (分配了 {} 个用例)"
running_as_single_runner = "作为单个执行器运行所有测试用例。"
no_cases_to_run = "此执行器没有要运行的测试用例，成功退出。"
current_os = "检测到当前操作系统: {}"
running_safe_cases = "正在运行 {} 个安全配置，最多 {} 个并行任务..."
running_flaky_cases = "正在顺序运行 {} 个不稳定配置..."
all_tests_completed = "所有测试已完成。正在生成报告..."
test_skipped_due_to_cancellation = "测试因取消而被跳过。"
temp_dir_cleanup_end_success = "成功的测试所产生的临时构建目录已被自动清理。"

# Panics in main.rs
project_dir_not_found = "无法在以下路径找到项目目录: {}"
cargo_fetch_failed = "'cargo fetch' 执行失败。请检查您的网络和 Cargo.toml 文件。"
manifest_read_failed = "无法读取 Cargo.toml 于: {}"
manifest_parse_failed = "解析 Cargo.toml 失败"
config_read_failed = "读取配置文件失败: {}"
config_parse_failed = "解析 TOML 配置文件失败"
runner_index_invalid = "--runner-index 必须小于 --total-runners。"
runner_flags_inconsistent = "--total-runners 和 --runner-index 必须同时提供。"

# reporting.rs
unexpected_failure_banner = "检测到意外失败"
failure_details_for = "  失败详情: {}"
stopping_other_tests = "正在通知所有其他正在运行的测试停止。最终摘要将在末尾打印。"
final_summary_banner = "==================== 最终摘要 ===================="
summary_successful_tests = "---成功的测试---"
summary_allowed_failures = "---允许的失败---"
summary_failed_as_expected = "{} (在 {} 上如预期般失败)"
summary_cancelled_tests = "---已取消的测试---"
summary_cancelled_test_case = "{} (已取消)"
summary_unexpected_failures = "---意外的失败---"
summary_unexpected_failure_case = "{} ({} 失败)"
overall_failure = "测试矩阵执行失败"
overall_cancelled = "测试矩阵执行被取消"
overall_success = "测试矩阵成功通过" 